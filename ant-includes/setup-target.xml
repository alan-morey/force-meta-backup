<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:if="ant:if" xmlns:unless="ant:unless">

  <target name="-setUp">
    <mkdir dir="${build.dir}" />

    <property file="build.properties" />
    <property file="ant-includes/default.properties" />

    <forceApiVersion name="force.api.version" />
    <property name="sf.apiVersion" value="${force.api.version.major}" />

    <echo>Force API Version: ${force.api.version}</echo>
    <echo>Salesforce API Version (sf.apiVersion): ${sf.apiVersion}</echo>
    <echo>Bulk Retrieve Batch Size (sf.batchSize): ${sf.batchSize}</echo>
    <echo>Bulk Retrieve Concurrency (sf.concurrency): ${sf.concurrency}</echo>

    <prop-required property="sf.serverurl" />
    <prop-not-blank property="sf.sessionId" />
    <prop-not-blank property="sf.username" />
    <prop-not-blank property="sf.password" />

    <echo>Server URL (sf.serverurl): ${sf.serverurl}</echo>
    <echo>Username (sf.username): ${sf.username}</echo>
    <echo if:set="sf.password">Password (sf.password) property is set.</echo>
    <echo if:set="sf.sessionId">Session ID (sf.sessionId) property is set.</echo>
  </target>

  <target name="-setUpMetadataDir" depends="-setUp">
    <mkdir dir="${build.metadata.dir}" />
  </target>

  <macrodef name="prop-not-blank" description="Declare optional property, that must not be blank">
    <attribute name="property" />

    <sequential>
      <fail message="When defined, the property @{property}, must not be empty or blank">
        <condition>
          <and>
            <isset property="@{property}" />
            <equals arg1="${@{property}}" arg2="" trim="true" />
          </and>
        </condition>
      </fail>
    </sequential>
  </macrodef>

  <macrodef name="prop-required" description="Declare required property, that must not be blank">
    <attribute name="property" />

    <sequential>
      <fail message="The property @{property} is required and must not be empty or blank">
        <condition>
          <or>
            <not>
              <isset property="@{property}" />
            </not>
            <equals arg1="${@{property}}" arg2="" trim="true" />
          </or>
        </condition>
      </fail>
    </sequential>
  </macrodef>

</project>
